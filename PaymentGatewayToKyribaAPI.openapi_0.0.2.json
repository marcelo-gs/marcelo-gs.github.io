{
    "openapi": "3.0.2",
    "info": {
        "title": "Payment Gateway to Kyriba API",
        "description": "***Payment Gateway to Kyriba Integration***\n*Payment Gateway is an important and very critical Treasury application that allows business users to create payment requests with the counter party ID and bank account details.*\nThis API integrates Payment Gateway and Kyriba system        default:\n      $ref: \"#/components/responses/Default\"s, providing a seamless connection and mapping between them. Developed and supported by Integration Team.\n",
        "contact": {
            "name": "Marcelo Gomes da Silva",
            "email": "MarceloGomesdaSilva@cofcointernational.com"
        },
        "version": "0.0.2"
    },
    "servers": [{
            "url": "https://ipl-common-api-dev.cofcointernational.com/interanal/IPL-PG-KYRIBA",
            "description": "Development Environment"
        }, {
            "url": "https://ipl-common-api-uat.cofcointernational.com/interanal/IPL-PG-KYRIBA",
            "description": "UAT (Quality Assurance) Environment"
        }, {
            "url": "https://ipl-common-api.cofcointernational.com/interanal/IPL-PG-KYRIBA",
            "description": "Production Environment"
        }
    ],
    "security": [{
            "Ocp-Apim-Subscription-Key": []
        }
    ],
    "externalDocs": {
        "description": "Additional external documentation.",
        "url": "https://dev.azure.com/COFCOInternational/Integration%20Platform/_wiki/wikis/Integration-Platform.wiki/1886/Payment-Gateway-to-Kyriba"
    },
    "paths": {
        "/processPayments": {
            "post": {
                "operationId": "postPayments",
                "tags": [
                    "Payment"
                ],
                "security": [{
                        "Ocp-Apim-Subscription-Key": []
                    }
                ],
                "parameters": [{
                        "$ref": "#/components/parameters/subscription-key"
                    }
                ],
                "summary": "Send payments",
                "description": "Operation defined to send payments to be processed by Kyriba",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PaymentRequestv1"
                                },
                                "maxItems": 200
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "$ref": "#/components/responses/Accepted"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "406": {
                        "$ref": "#/components/responses/NotAcceptable"
                    },
                    "413": {
                        "$ref": "#/components/responses/PayloadTooLarge"
                    },
                    "415": {
                        "$ref": "#/components/responses/UnsupportedMediaType"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequests"
                    },
                    "default": {
                        "$ref": "#/components/responses/Default"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "Ocp-Apim-Subscription-Key": {
                "type": "apiKey",
                "name": "Ocp-Apim-Subscription-Key",
                "description": "Api key (optionally) could be sent as Header",
                "in": "header"
            }
        },
        "parameters": {
            "subscription-key": {
                "name": "subscription-key",
                "in": "query",
                "description": "Api key (optionally) could be sent as query parameter.",
                "schema": {
                    "type": "string",
                    "pattern": "^[0-9a-f]{32}$",
                    "maxLength": 32,
                    "x-42c-sample": "d2a198d223cb40e6aad01629a02e775f"
                }
            }
        },
        "schemas": {
            "PaymentRequestv1": {
                "type": "object",
                "description": "JSON defining a Payment object",
                "additionalProperties": false,
                "required": [
                    "PRID",
                    "PaymentGroupID",
                    "SubmissionDate",
                    "SubmitBy",
                    "LegalEntityCode",
                    "LegalEntityName",
                    "BusCatID",
                    "BusinessCategory",
                    "LocationID",
                    "Location",
                    "ProductID",
                    "Product",
                    "ReqTypeID",
                    "RequestType",
                    "PaymentType",
                    "PaymentCategoryID",
                    "PaymentCategory",
                    "TradeID",
                    "PaymentAmount",
                    "PaymentCurrency",
                    "ExchangeRate",
                    "ValueDate",
                    "InvoiceReference",
                    "SSIPIC",
                    "SSICurrency",
                    "BeneficiaryAccountName",
                    "BeneficiaryAccountNo",
                    "BeneficiaryIBANNo",
                    "BeneficiaryBBANNo",
                    "BeneficiaryAddressLine1",
                    "BeneficiaryAddressLine2",
                    "BeneficiaryAddressLine3",
                    "BeneficiaryBankName",
                    "BeneficiarySwiftCode",
                    "BeneficiaryBankAddressLine1",
                    "BeneficiaryBankAddressLine2",
                    "BeneficiaryBankAddressLine3",
                    "BeneficiaryUSChipsABANo",
                    "BeneficiaryChipsUIDNo",
                    "BeneficiaryUSFedwireNo",
                    "BeneficiaryGBSortCode",
                    "BeneficiaryOtherCountryBankID",
                    "BeneficiaryBankCountryCode",
                    "IntermedBankName",
                    "IntermedSwiftCode",
                    "IntermedBankAddressLine1",
                    "IntermedBankAddressLine2",
                    "IntermedBankAddressLine3",
                    "IntermedUSChipsABANo",
                    "IntermedUSFedwireNo",
                    "IntermedGBSortCode",
                    "IntermedOtherCountryBankID",
                    "IntermedBankCountryCode",
                    "SSIRemarks",
                    "ChargedPaidBy",
                    "Remarks",
                    "PRStatus",
                    "PGUCode",
                    "DebitBankAcc",
                    "DebtorBankBIC",
                    "CreatedBy",
                    "CreateDate",
                    "ModifiedBy",
                    "ModifiedDate",
                    "IntermedChipsUIDNo",
                    "CounterPartyName",
                    "CompanyName",
                    "PayReferenceCode1",
                    "PayReferenceCode2",
                    "PayReferenceCode3",
                    "PayReferenceCode4",
                    "PayReference1",
                    "PayReference2",
                    "PayReference3",
                    "PayReference4",
                    "DebtorCountry",
                    "DebtorAddress",
                    "DebtorBankCountryCode",
                    "IsHSBCAccount",
                    "BankInfoCode1",
                    "BankInfoCode2",
                    "BankInfo1",
                    "BankInfo2",
                    "PayPurpose",
                    "DebitAccountCurrency",
                    "PFSUBGPID",
                    "EntityDebitCurrency",
                    "BalPayCombineCateCode",
                    "FXConversionRate",
                    "ContractIdentification",
                    "BillOfLadingDate",
                    "ShipmentID",
                    "CPIID",
                    "BatchPaymentType",
                    "PrintLocation",
                    "KyribaPaymentTypeCode",
                    "KyribaDebitAccountCode",
                    "KyribaBusCode",
                    "VesselName",
                    "Destination",
                    "BankName",
                    "RegulatoryReportingCode",
                    "BeneficiarySUNCode",
                    "RemittanceID",
                    "KyribaPaymentPurposeCode",
                    "Region"
                ],
                "properties": {
                    "PRID": {
                        "type": "string",
                        "maxLength": 30,
                        "pattern": "^(.|[\r\n]){0,30}$",
                        "x-42c-sample": "PR-AA1DB81DC8"
                    },
                    "PaymentGroupID": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "Q05AGO1603020005"
                    },
                    "SubmissionDate": {
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^(\\d{4}-\\d{2}-\\d{2}[\\sT]\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?Z)$",
                        "description": "YYYY-MM-DDThh:mm:ss.sssZ ->  string that represents a date and time value in the ISO 8601 format",
                        "x-42c-sample": "2018-08-21 16:12:29.0084104"
                    },
                    "SubmitBy": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "CI\\TebogoMolatudi"
                    },
                    "LegalEntityCode": {
                        "type": "string",
                        "maxLength": 200,
                        "pattern": "^(.|[\r\n]){0,200}$",
                        "x-42c-sample": "R050"
                    },
                    "LegalEntityName": {
                        "type": "string",
                        "maxLength": 512,
                        "pattern": "^(.|[\r\n]){0,512}$",
                        "x-42c-sample": "COFCO South Africa Pty Ltd"
                    },
                    "BusCatID": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 9999,
                        "x-42c-sample": 379
                    },
                    "BusinessCategory": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "SAF Finance"
                    },
                    "LocationID": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 9999,
                        "x-42c-sample": 423
                    },
                    "Location": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "South Africa"
                    },
                    "ProductID": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 9999,
                        "x-42c-sample": 233
                    },
                    "Product": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "Grains / Oilseeds"
                    },
                    "ReqTypeID": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 9999,
                        "x-42c-sample": 808
                    },
                    "RequestType": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "3rd party supplier"
                    },
                    "PaymentType": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "BATCH"
                    },
                    "PaymentCategoryID": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 9999,
                        "x-42c-sample": 105
                    },
                    "PaymentCategory": {
                        "type": "string",
                        "maxLength": 30,
                        "pattern": "^(.|[\r\n]){0,30}$",
                        "x-42c-sample": "DISBURSEMENT(DIS)"
                    },
                    "TradeID": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "FI-P-2244-CH"
                    },
                    "PaymentAmount": {
                        "type": "number",
                        "minimum": -9999999999,
                        "maximum": 9999999999,
                        "format": "double",
                        "multipleOf": 0.01,
                        "x-42c-sample": 497808.98
                    },
                    "PaymentCurrency": {
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^(.|[\r\n]){0,3}$",
                        "x-42c-sample": "ZAR"
                    },
                    "ExchangeRate": {
                        "type": "number",
                        "minimum": -9999999999,
                        "maximum": 9999999999,
                        "format": "double",
                        "multipleOf": 0.01,
                        "x-42c-sample": 497808.98
                    },
                    "ValueDate": {
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^(\\d{4}-\\d{2}-\\d{2}[\\sT]\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?Z)$",
                        "description": "YYYY-MM-DDThh:mm:ss.sssZ ->  string that represents a date and time value in the ISO 8601 format",
                        "x-42c-sample": "2018-08-21 16:12:29.0084104"
                    },
                    "InvoiceReference": {
                        "type": "string",
                        "maxLength": 100,
                        "pattern": "^(.|[\r\n]){0,100}$",
                        "x-42c-sample": "IN299807-IN299950"
                    },
                    "SSIPIC": {
                        "type": "string",
                        "maxLength": 40,
                        "pattern": "^(.|[\r\n]){0,40}$",
                        "x-42c-sample": "PGS_63512_MBSHIPPINGL_CH55088221060_USD"
                    },
                    "SSICurrency": {
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^(.|[\r\n]){0,3}$",
                        "x-42c-sample": "EUR"
                    },
                    "BeneficiaryAccountName": {
                        "type": "string",
                        "maxLength": 100,
                        "pattern": "^(.|[\r\n]){0,100}$",
                        "x-42c-sample": "NOBLE BRAZIL OVERSEAS LIMITED"
                    },
                    "BeneficiaryAccountNo": {
                        "type": "string",
                        "maxLength": 61,
                        "pattern": "^(.|[\r\n]){0,61}$",
                        "x-42c-sample": "CY45005001900001900774974401"
                    },
                    "BeneficiaryIBANNo": {
                        "type": "string",
                        "maxLength": 61,
                        "pattern": "^(.|[\r\n]){0,61}$",
                        "x-42c-sample": "ES4900491500082119300966"
                    },
                    "BeneficiaryBBANNo": {
                        "type": "string",
                        "maxLength": 61,
                        "pattern": "^(.|[\r\n]){0,61}$",
                        "x-42c-sample": "LELLIEFONTEIN"
                    },
                    "BeneficiaryAddressLine1": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "315 Outram Road"
                    },
                    "BeneficiaryAddressLine2": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "09 05 Tan Boon Liat Building"
                    },
                    "BeneficiaryAddressLine3": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "169074 Singapore SG"
                    },
                    "BeneficiaryBankName": {
                        "type": "string",
                        "maxLength": 100,
                        "pattern": "^(.|[\r\n]){0,100}$",
                        "x-42c-sample": "DEVELOPMENT CREDIT BANK (DCB)"
                    },
                    "BeneficiarySwiftCode": {
                        "type": "string",
                        "maxLength": 40,
                        "pattern": "^(.|[\r\n]){0,40}$",
                        "x-42c-sample": "DCBLINBB036"
                    },
                    "BeneficiaryBankAddressLine1": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "PRERNA ARCADE"
                    },
                    "BeneficiaryBankAddressLine2": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "OPP DOCTOR HOUSE NR PARIMAL GRDN"
                    },
                    "BeneficiaryBankAddressLine3": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "380006 AHMEDABAD GUJARAT IN"
                    },
                    "BeneficiaryUSChipsABANo": {
                        "type": "string",
                        "maxLength": 40,
                        "pattern": "^(.|[\r\n]){0,40}$",
                        "x-42c-sample": "026002574"
                    },
                    "BeneficiaryChipsUIDNo": {
                        "type": "string",
                        "maxLength": 40,
                        "pattern": "^(.|[\r\n]){0,40}$",
                        "x-42c-sample": "172097"
                    },
                    "BeneficiaryUSFedwireNo": {
                        "type": "string",
                        "maxLength": 20,
                        "pattern": "^(.|[\r\n]){0,20}$",
                        "x-42c-sample": " BEDFORD"
                    },
                    "BeneficiaryGBSortCode": {
                        "type": "string",
                        "maxLength": 40,
                        "pattern": "^(.|[\r\n]){0,40}$",
                        "x-42c-sample": "250655"
                    },
                    "BeneficiaryOtherCountryBankID": {
                        "type": "string",
                        "maxLength": 20,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "XXXXXBANKID"
                    },
                    "BeneficiaryBankCountryCode": {
                        "type": "string",
                        "maxLength": 20,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "CH"
                    },
                    "IntermedBankName": {
                        "type": "string",
                        "maxLength": 100,
                        "pattern": "^(.|[\r\n]){0,100}$",
                        "x-42c-sample": "DEVELOPMENT CREDIT BANK (DCB)"
                    },
                    "IntermedSwiftCode": {
                        "type": "string",
                        "maxLength": 40,
                        "pattern": "^(.|[\r\n]){0,40}$",
                        "x-42c-sample": "DCBLINBB036"
                    },
                    "IntermedBankAddressLine1": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "PRERNA ARCADE"
                    },
                    "IntermedBankAddressLine2": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "OPP DOCTOR HOUSE NR PARIMAL GRDN"
                    },
                    "IntermedBankAddressLine3": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "380006 AHMEDABAD GUJARAT IN"
                    },
                    "IntermedUSChipsABANo": {
                        "type": "string",
                        "maxLength": 40,
                        "pattern": "^(.|[\r\n]){0,40}$",
                        "x-42c-sample": "026002574"
                    },
                    "IntermedUSFedwireNo": {
                        "type": "string",
                        "maxLength": 20,
                        "pattern": "^(.|[\r\n]){0,20}$",
                        "x-42c-sample": " BEDFORD"
                    },
                    "IntermedGBSortCode": {
                        "type": "string",
                        "maxLength": 40,
                        "pattern": "^(.|[\r\n]){0,40}$",
                        "x-42c-sample": "250655"
                    },
                    "IntermedOtherCountryBankID": {
                        "type": "string",
                        "maxLength": 20,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "XXXXXBANKID"
                    },
                    "IntermedBankCountryCode": {
                        "type": "string",
                        "maxLength": 20,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "CH"
                    },
                    "SSIRemarks": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^(.|[\r\n]){0,255}$",
                        "x-42c-sample": "Rotterdam office employee bank acc."
                    },
                    "ChargedPaidBy": {
                        "type": "string",
                        "maxLength": 10,
                        "pattern": "^(.|[\r\n]){0,10}$",
                        "x-42c-sample": "Shared"
                    },
                    "Remarks": {
                        "type": "string",
                        "pattern": "^[\\s\\S]*$",
                        "x-42c-sample": "LPORT     : VARNA DISPORT : PONTA DELGADA + PRAIA DA VITORIA"
                    },
                    "PRStatus": {
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^(.|[\r\n]){0,3}$",
                        "x-42c-sample": "EXP"
                    },
                    "PGUCode": {
                        "type": "string",
                        "maxLength": 200,
                        "pattern": "^(.|[\r\n]){0,200}$",
                        "x-42c-sample": "AGUA215A"
                    },
                    "DebitBankAcc": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "IT11Y0302101600007022783020"
                    },
                    "DebtorBankBIC": {
                        "type": "string",
                        "maxLength": 20,
                        "pattern": "^(.|[\r\n]){0,20}$",
                        "x-42c-sample": "MIDLITMX"
                    },
                    "CreatedBy": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "CI\\TebogoMolatudi"
                    },
                    "CreateDate": {
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^(\\d{4}-\\d{2}-\\d{2}[\\sT]\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?Z)$",
                        "description": "YYYY-MM-DDThh:mm:ss.sssZ ->  string that represents a date and time value in the ISO 8601 format",
                        "x-42c-sample": "2018-06-04 16:26:17.7186329"
                    },
                    "ModifiedBy": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "SYSTEM"
                    },
                    "ModifiedDate": {
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^(\\d{4}-\\d{2}-\\d{2}[\\sT]\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?Z)$",
                        "description": "YYYY-MM-DDThh:mm:ss.sssZ ->  string that represents a date and time value in the ISO 8601 format",
                        "x-42c-sample": "2020-12-29 02:54:44.2119259"
                    },
                    "IntermedChipsUIDNo": {
                        "type": "string",
                        "maxLength": 40,
                        "pattern": "^(.|[\r\n]){0,40}$",
                        "x-42c-sample": "172097"
                    },
                    "CounterPartyName": {
                        "type": "string",
                        "maxLength": 61,
                        "pattern": "^(.|[\r\n]){0,61}$",
                        "x-42c-sample": "Flip Van Tonder & Sons Pty (Ltd)"
                    },
                    "CompanyName": {
                        "type": "string",
                        "maxLength": 100,
                        "pattern": "^(.|[\r\n]){0,100}$",
                        "x-42c-sample": "Flip Van Tonder & Sons Pty (Ltd)"
                    },
                    "PayReferenceCode1": {
                        "type": "string",
                        "maxLength": 5,
                        "pattern": "^(.|[\r\n]){0,5}$",
                        "x-42c-sample": "INV"
                    },
                    "PayReferenceCode2": {
                        "type": "string",
                        "maxLength": 5,
                        "pattern": "^(.|[\r\n]){0,5}$",
                        "x-42c-sample": "INV"
                    },
                    "PayReferenceCode3": {
                        "type": "string",
                        "maxLength": 5,
                        "pattern": "^(.|[\r\n]){0,5}$",
                        "x-42c-sample": "INV"
                    },
                    "PayReferenceCode4": {
                        "type": "string",
                        "maxLength": 5,
                        "pattern": "^(.|[\r\n]){0,5}$",
                        "x-42c-sample": "INV"
                    },
                    "PayReference1": {
                        "type": "string",
                        "maxLength": 40,
                        "pattern": "^(.|[\r\n]){0,40}$",
                        "x-42c-sample": "20092076"
                    },
                    "PayReference2": {
                        "type": "string",
                        "maxLength": 40,
                        "pattern": "^(.|[\r\n]){0,40}$",
                        "x-42c-sample": "02.12.2020"
                    },
                    "PayReference3": {
                        "type": "string",
                        "maxLength": 40,
                        "pattern": "^(.|[\r\n]){0,40}$",
                        "x-42c-sample": "CONTRACT NO 612863"
                    },
                    "PayReference4": {
                        "type": "string",
                        "maxLength": 40,
                        "pattern": "^(.|[\r\n]){0,40}$",
                        "x-42c-sample": "INV"
                    },
                    "DebtorCountry": {
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^(.|[\r\n]){0,3}$",
                        "x-42c-sample": "CH"
                    },
                    "DebtorAddress": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^(.|[\r\n]){0,255}$",
                        "x-42c-sample": "207 ROUTE DE FERNEY,1218 LE GRAND SACONNEX,SWITZERLAND"
                    },
                    "DebtorBankCountryCode": {
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^(.|[\r\n]){0,3}$",
                        "x-42c-sample": "US "
                    },
                    "IsHSBCAccount": {
                        "type": "boolean",
                        "x-42c-sample": true
                    },
                    "BankInfoCode1": {
                        "type": "string",
                        "maxLength": 5,
                        "pattern": "^(.|[\r\n]){0,5}$",
                        "x-42c-sample": "ACC"
                    },
                    "BankInfoCode2": {
                        "type": "string",
                        "maxLength": 5,
                        "pattern": "^(.|[\r\n]){0,5}$",
                        "x-42c-sample": "INT"
                    },
                    "BankInfo1": {
                        "type": "string",
                        "maxLength": 40,
                        "pattern": "^(.|[\r\n]){0,40}$",
                        "x-42c-sample": "AGENCIA 0280"
                    },
                    "BankInfo2": {
                        "type": "string",
                        "maxLength": 40,
                        "pattern": "^(.|[\r\n]){0,40}$",
                        "x-42c-sample": "ACC NO 3544030205001"
                    },
                    "PayPurpose": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "/BUSINESS/GOODS TRADE"
                    },
                    "DebitAccountCurrency": {
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^(.|[\r\n]){0,3}$",
                        "x-42c-sample": "ZAR"
                    },
                    "PFSUBGPID": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "008"
                    },
                    "EntityDebitCurrency": {
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^(.|[\r\n]){0,3}$",
                        "x-42c-sample": "ZAR"
                    },
                    "BalPayCombineCateCode": {
                        "type": "string",
                        "maxLength": 30,
                        "pattern": "^(.|[\r\n]){0,30}$",
                        "x-42c-sample": "101-01"
                    },
                    "FXConversionRate": {
                        "type": "string",
                        "maxLength": 9,
                        "pattern": "^(.|[\r\n]){0,9}$",
                        "x-42c-sample": "0.00"
                    },
                    "ContractIdentification": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "/BUSINESS/GOODS TRADE"
                    },
                    "BillOfLadingDate": {
                        "type": "string",
                        "format": "date-time",
                        "pattern": "^(\\d{4}-\\d{2}-\\d{2}[\\sT]\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?Z)$",
                        "description": "YYYY-MM-DDThh:mm:ss.sssZ ->  string that represents a date and time value in the ISO 8601 format",
                        "x-42c-sample": "2018-08-21 16:12:29.0084104"
                    },
                    "ShipmentID": {
                        "type": "string",
                        "maxLength": 20,
                        "pattern": "^(.|[\r\n]){0,20}$",
                        "x-42c-sample": "20211096"
                    },
                    "CPIID": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maximum": 999999,
                        "x-42c-sample": 28297
                    },
                    "BatchPaymentType": {
                        "type": "string",
                        "maxLength": 10,
                        "pattern": "^(.|[\r\n]){0,10}$",
                        "x-42c-sample": "TEST"
                    },
                    "PrintLocation": {
                        "type": "string",
                        "maxLength": 30,
                        "pattern": "^(.|[\r\n]){0,30}$",
                        "x-42c-sample": "Mumbai"
                    },
                    "KyribaPaymentTypeCode": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "ITHV"
                    },
                    "KyribaDebitAccountCode": {
                        "type": "string",
                        "maxLength": 60,
                        "pattern": "^(.|[\r\n]){0,60}$",
                        "x-42c-sample": "NL1CHASUSD66"
                    },
                    "KyribaBusCode": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "NL1CHASUSD66"
                    },
                    "VesselName": {
                        "type": "string",
                        "pattern": "^[\\s\\S]*$",
                        "x-42c-sample": "YIN ZHU HAI"
                    },
                    "Destination": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "Portugal"
                    },
                    "BankName": {
                        "type": "string",
                        "maxLength": 20,
                        "pattern": "^(.|[\r\n]){0,20}$",
                        "x-42c-sample": "HSBC"
                    },
                    "RegulatoryReportingCode": {
                        "type": "string",
                        "pattern": "^[\\s\\S]*$",
                        "x-42c-sample": "/BUSINESS/SERVICE TRADE"
                    },
                    "BeneficiarySUNCode": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^(.|[\r\n]){0,50}$",
                        "x-42c-sample": "TFLI010        "
                    },
                    "RemittanceID": {
                        "type": "string",
                        "maxLength": 224,
                        "pattern": "^(.|[\r\n]){0,224}$",
                        "x-42c-sample": "PGQ05AGO1603020005"
                    },
                    "KyribaPaymentPurposeCode": {
                        "type": "string",
                        "maxLength": 10,
                        "pattern": "^(.|[\r\n]){0,10}$",
                        "x-42c-sample": "SUPP"
                    },
                    "Region": {
                        "type": "string",
                        "maxLength": 15,
                        "pattern": "^(.|[\r\n]){0,15}$",
                        "x-42c-sample": "Region Name"
                    }
                }
            },
            "BadRequestError": {
                "type": "object",
                "additionalProperties": false,
                "description": "400 Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error",
                "properties": {
                    "message": {
                        "type": "string",
                        "pattern": "^[0-9a-zA-Z\\s]+$",
                        "maxLength": 32,
                        "x-42c-sample": "400 Bad Request"
                    }
                }
            },
            "UnauthorizedError": {
                "type": "object",
                "additionalProperties": false,
                "description": "401 Unauthorized - Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\".",
                "properties": {
                    "message": {
                        "type": "string",
                        "pattern": "^[0-9a-zA-Z\\s]+$",
                        "maxLength": 32,
                        "x-42c-sample": "401 Unauthorized"
                    }
                }
            },
            "ForbiddenError": {
                "type": "object",
                "additionalProperties": false,
                "description": "403 Forbidden - The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource.",
                "properties": {
                    "message": {
                        "type": "string",
                        "pattern": "^[0-9a-zA-Z\\s]+$",
                        "maxLength": 32,
                        "x-42c-sample": "403 Forbidden"
                    }
                }
            },
            "NotFoundError": {
                "type": "object",
                "additionalProperties": false,
                "description": "404 Not Found - The server cannot find the requested resource. This can also mean that the endpoint is valid but the resource itself does not exist",
                "properties": {
                    "message": {
                        "type": "string",
                        "pattern": "^[0-9a-zA-Z\\s]+$",
                        "maxLength": 32,
                        "x-42c-sample": "404 Not Found"
                    }
                }
            },
            "NotAcceptableError": {
                "type": "object",
                "additionalProperties": false,
                "description": "406 Not Acceptable - This response is sent when the web server, after performing server-driven content negotiation, doesn't find any content that conforms to the criteria given by the user agent.",
                "properties": {
                    "message": {
                        "type": "string",
                        "pattern": "^[0-9a-zA-Z\\s]+$",
                        "maxLength": 32,
                        "x-42c-sample": "406 Not Acceptable"
                    }
                }
            },
            "UnsupportedMediaTypeError": {
                "type": "object",
                "additionalProperties": false,
                "description": "415 Unsupported Media Type - The media format of the requested data is not supported by the server, so the server is rejecting the request.",
                "properties": {
                    "message": {
                        "type": "string",
                        "pattern": "^[0-9a-zA-Z\\s]+$",
                        "maxLength": 32,
                        "x-42c-sample": "415 Unsupported Media Type"
                    }
                }
            },
            "TooManyRequestsError": {
                "type": "object",
                "description": "429 Too Many Requests - The user has sent too many requests in a given amount of time (\"rate limiting\").",
                "additionalProperties": false,
                "properties": {
                    "message": {
                        "type": "string",
                        "pattern": "^[0-9a-zA-Z\\s]+$",
                        "maxLength": 32,
                        "x-42c-sample": "429 Too Many Requests"
                    }
                }
            },
            "PayloadTooLargeError": {
                "type": "object",
                "description": "413 Payload Too Large - Request entity is larger than limits defined by server.",
                "additionalProperties": false,
                "properties": {
                    "message": {
                        "type": "string",
                        "pattern": "^[0-9a-zA-Z\\s]+$",
                        "maxLength": 32,
                        "x-42c-sample": "Payload Too Large"
                    }
                }
            },
            "AcceptedResponse": {
                "type": "object",
                "description": "202 Accepted - The request has been received but not yet acted upon.",
                "additionalProperties": false
            },
            "DefaultResponse": {
                "type": "object",
                "description": "Request entity is larger than limits defined by server.",
                "additionalProperties": false,
                "properties": {
                    "message": {
                        "type": "string",
                        "pattern": "^[0-9a-zA-Z\\s]+$",
                        "maxLength": 32,
                        "x-42c-sample": "Default"
                    }
                }
            }
        },
        "responses": {
            "BadRequest": {
                "description": "Bad request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BadRequestError"
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UnauthorizedError"
                        }
                    }
                }
            },
            "Forbidden": {
                "description": "Forbidden",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ForbiddenError"
                        }
                    }
                }
            },
            "NotFound": {
                "description": "NotFound",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/NotFoundError"
                        }
                    }
                }
            },
            "NotAcceptable": {
                "description": "Not Acceptable",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/NotAcceptableError"
                        }
                    }
                }
            },
            "UnsupportedMediaType": {
                "description": "Unsupported Media Type",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UnsupportedMediaTypeError"
                        }
                    }
                }
            },
            "TooManyRequests": {
                "description": "Too Many Requests",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/TooManyRequestsError"
                        }
                    }
                }
            },
            "Accepted": {
                "description": "Accepted",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AcceptedResponse"
                        }
                    }
                }
            },
            "PayloadTooLarge": {
                "description": "Payload Too Large",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/PayloadTooLargeError"
                        }
                    }
                }
            },
            "Default": {
                "description": "Default Response",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DefaultResponse"
                        }
                    }
                }
            }
        }
    }
}
